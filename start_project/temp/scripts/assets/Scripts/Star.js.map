{"version":3,"sources":["assets\\Scripts\\Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","onLoad","getPlayerDistance","playerPos","game","player","getPosition","dist","pDistance","node","position","onPicked","spawnNewStar","gainScore","destroy","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACEC,oBAAY;AAFN,KAHP;;AAQL;AACAC,YAAQ,kBAAY,CAEnB,CAXI;AAYLC,uBAAmB,6BAAU;AACzB;AACA,YAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,YAAIC,OAAOZ,GAAGa,SAAH,CAAa,KAAKC,IAAL,CAAUC,QAAvB,EAAgCP,SAAhC,CAAX;AACA,eAAOI,IAAP;AACH,KAlBI;;AAoBLI,cAAU,oBAAU;AAChB;AACA,aAAKP,IAAL,CAAUQ,YAAV;AACA;AACA,aAAKR,IAAL,CAAUS,SAAV;AACA;AACA,aAAKJ,IAAL,CAAUK,OAAV;AACH,KA3BI;;AA6BJC,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA,YAAIC,eAAe,IAAI,KAAKb,IAAL,CAAUc,KAAV,GAAgB,KAAKd,IAAL,CAAUe,YAAjD;AACA,YAAIC,aAAa,EAAjB;AACA,aAAKX,IAAL,CAAUY,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;AACF;AACE,YAAG,KAAKlB,iBAAL,KAA2B,KAAKF,UAAnC,EAA8C;AAC1C;AACA,iBAAKW,QAAL;AACA;AACH;AACH;AAxCE,CAAT","file":"unknown","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 主角和星星之间的距离小于这个数值时，就会完成收集\r\n          pickRadius: 0\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n\r\n    },\r\n    getPlayerDistance: function(){\r\n        //  根据 player 节点位置判断距离\r\n        var playerPos = this.game.player.getPosition();\r\n        // 根据两点位置计算两点之间距离\r\n        var dist = cc.pDistance(this.node.position,playerPos);\r\n        return dist;\r\n    },\r\n    \r\n    onPicked: function(){\r\n        // 当星星被收集时，调用game 脚本中的借口，生成一个新的星星\r\n        this.game.spawnNewStar();\r\n        // 调用Game 脚本的得分方法\r\n        this.game.gainScore();\r\n        // 然后销毁当前星星节点 \r\n        this.node.destroy();\r\n    },\r\n\r\n     update: function (dt) {\r\n         // 根据 Game  脚本中的计时器更新星星的透明度 \r\n         var opacityRatio = 1 - this.game.timer/this.game.starDuration;\r\n         var minOpacity = 50;\r\n         this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n       //每帧判断和主角之间的距离是否小于收集距离\r\n         if(this.getPlayerDistance() < this.pickRadius){\r\n             // 调用收集行为\r\n             this.onPicked();\r\n             return;\r\n         }\r\n      },\r\n});\r\n"]}