{"version":3,"sources":["assets\\Scripts\\Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","url","AudioClip","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","setInputControl","self","eventManager","addListener","event","EventListener","KEYBOARD","onKeyPressed","keyCode","KEY","a","accLeft","accRight","d","onKeyReleased","node","onLoad","jumpAction","runAction","xSpeed","update","dt","Math","abs","x"],"mappings":"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","file":"unknown","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n      // 主角跳跃高度\r\n       jumpHeight: 0,\r\n       // 主角跳跃持续时间\r\n       jumpDuration: 0,\r\n        // 最大移动速度\r\n         maxMoveSpeed: 0,\r\n         // 加速度\r\n         accel: 0,\r\n         jumpAudio:{\r\n             default:null,\r\n             url: cc.AudioClip\r\n         },\r\n    },\r\n    setJumpAction: function(){\r\n      // 跳跃上升\r\n        var jumpUp = cc.moveBy(this.jumpDuration,cc.p(0,this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n      // 下落\r\n       var jumpDown = cc.moveBy(this.jumpDuration,cc.p(0,-this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n       // 添加一个回调函数， 用于在动作结束时调用我们定义的其他方法\r\n       var callback = cc.callFunc(this.playJumpSound,this);\r\n       // 不断重复\r\n       return cc.repeatForever(cc.sequence(jumpUp,jumpDown,callback));\r\n    },\r\n    \r\n    playJumpSound: function(){\r\n        // 调用声音引擎播放声音\r\n        cc.audioEngine.playEffect(this.jumpAudio,false);\r\n    },\r\n    \r\n    setInputControl: function(){\r\n        var self = this;\r\n        // 添加键盘事件监听\r\n         cc.eventManager.addListener({\r\n             event: cc.EventListener.KEYBOARD,\r\n             // 有键盘按下时  判断是否是我们指定的方向控制键， 并 设置向对应方向加速\r\n             onKeyPressed: function(keyCode,event){\r\n                 switch(keyCode){\r\n                     case cc.KEY.a:\r\n                         self.accLeft = true;\r\n                         self.accRight = false;\r\n                         break;\r\n                    case cc.KEY.d:\r\n                        self.accLeft = false;\r\n                        self.accRight = true;\r\n                        break;\r\n                 }\r\n             },\r\n             // 松开按键时，停止向该方向的加速\r\n             onKeyReleased: function(keyCode,event){\r\n                 switch(keyCode){\r\n                     case cc.KEY.a:\r\n                         self.accLeft = false;\r\n                         break;\r\n                    case cc.KEY.d:\r\n                        self.accRight = false;\r\n                        break;\r\n                 }\r\n             }\r\n         },self.node);\r\n    },\r\n    // use this for initialization 使用以下函数初始化\r\n    onLoad: function () {\r\n    // 初始化跳跃动作\r\n    this.jumpAction = this.setJumpAction();\r\n    this.node.runAction(this.jumpAction);\r\n    // 加速度方向开关\r\n    this.accLeft = false;\r\n    this.accRight = false;\r\n    // 主角当前水平方向速度 \r\n    this.xSpeed = 0;\r\n    \r\n    // 初始化键盘输入监听\r\n    this.setInputControl();\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        //根据当前加速度方向每帧更新速度\r\n        if(this.accLeft){\r\n            this.xSpeed -= this.accel *dt;\r\n        }else if(this.accRight){\r\n            this.xSpeed += this.accel *dt;\r\n        }\r\n     //限制主角的速度不能超过最大值\r\n     if(Math.abs(this.xSpeed)>this.maxMoveSpeed){\r\n         // 如果速度到达了限制值，使用最大速度的方向 \r\n         this.xSpeed = this.maxMoveSpeed *this.xSpeed / Math.abs(this.xSpeed);\r\n     }\r\n     // 根据当前速度更新主角的位置\r\n      this.node.x +=this.xSpeed *dt;\r\n     },\r\n});\r\n"]}