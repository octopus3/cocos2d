{"version":3,"sources":["assets\\Scripts\\Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","url","AudioClip","gainScore","score","string","toString","audioEngine","playEffect","onLoad","groundY","y","height","timer","starDuration","spawnNewStar","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","random0To1","gameOver","stopAllActions","director","loadScene","randX","randY","jumpHeight","maxX","width","randomMinus1To1","p","update","dt"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACV;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAFF;AAMV;AACAC,yBAAiB,CAPP;AAQVC,yBAAiB,CARP;AASV;AACAC,gBAAO;AACHL,qBAAS,IADN;AAEHC,kBAAMP,GAAGY;AAFN,SAVG;AAcV;AACAC,gBAAO;AACHP,qBAAS,IADN;AAEHC,kBAAMP,GAAGY;AAFN,SAfG;AAmBV;AACAE,sBAAa;AACLR,qBAAS,IADJ;AAELC,kBAAMP,GAAGe;AAFJ,SApBH;AAwBR;AACFC,oBAAW;AACLV,qBAAS,IADJ;AAELW,iBAAKjB,GAAGkB;AAFH;AAzBD,KAHP;;AAkCLC,eAAU,qBAAU;AAChB,aAAKC,KAAL,IAAc,CAAd;AACA;AACA,aAAKN,YAAL,CAAkBO,MAAlB,GAA2B,WAAS,KAAKD,KAAL,CAAWE,QAAX,EAApC;AACA;AACAtB,WAAGuB,WAAH,CAAeC,UAAf,CAA0B,KAAKR,UAA/B,EAA0C,KAA1C;AACH,KAxCI;;AA0CL;AACAS,YAAQ,kBAAY;AACjB;AACA,aAAKC,OAAL,GAAe,KAAKf,MAAL,CAAYgB,CAAZ,GAAgB,KAAKhB,MAAL,CAAYiB,MAAZ,GAAmB,CAAlD;AACA;AACE,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,YAAL,GAAoB,CAApB;AACF;AACA,aAAKC,YAAL;AACA;AACA,aAAKX,KAAL,GAAa,CAAb;AACF,KArDI;;AAuDLW,kBAAc,wBAAU;AACpB;AACA,YAAIC,UAAUhC,GAAGiC,WAAH,CAAe,KAAK5B,UAApB,CAAd;AACA;AACC,aAAK6B,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;AACA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;AACA;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACA;AACD,aAAKT,YAAL,GAAoB,KAAKpB,eAAL,GAAuBV,GAAGwC,UAAH,MAAmB,KAAK/B,eAAL,GAAuB,KAAKC,eAA/C,CAA3C;AACA,aAAKmB,KAAL,GAAa,CAAb;AACH,KAnEI;;AAqELY,cAAU,oBAAU;AAChB,aAAK5B,MAAL,CAAY6B,cAAZ,GADgB,CACa;AAC7B1C,WAAG2C,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACH,KAxEI;;AA0ELP,wBAAoB,8BAAU;AAC1B,YAAIQ,QAAQ,CAAZ;AACA;AACA,YAAIC,QAAQ,KAAKpB,OAAL,GAAe1B,GAAGwC,UAAH,KAAkB,KAAK3B,MAAL,CAAYyB,YAAZ,CAAyB,QAAzB,EAAmCS,UAApE,GAAiF,EAA7F;AACA;AACA,YAAIC,OAAO,KAAKd,IAAL,CAAUe,KAAV,GAAgB,CAA3B;AACAJ,gBAAQ7C,GAAGkD,eAAH,KAAuBF,IAA/B;AACA;AACA,eAAOhD,GAAGmD,CAAH,CAAKN,KAAL,EAAWC,KAAX,CAAP;AACH,KAnFI;AAoFL;AACCM,YAAQ,gBAASC,EAAT,EAAY;AACf;AACA;AACA,YAAG,KAAKxB,KAAL,GAAa,KAAKC,YAArB,EAAkC;AAC9B,iBAAKW,QAAL;AACA;AACH;AACD,aAAKZ,KAAL,IAAcwB,EAAd;AACJ;AA7FG,CAAT","file":"unknown","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n      // 这个属性引用了星星预置资源\r\n      starPrefab: {\r\n          default: null,\r\n          type: cc.Prefab\r\n      },\r\n      // 星星产生后消失时间的随机范围 \r\n      maxStarDuration: 0,\r\n      minStarDuration: 0,\r\n      // 地面节点， 用于确定星星生成的高度 \r\n      ground:{\r\n          default: null,\r\n          type: cc.Node\r\n      },\r\n      //player 节点 ，用于获取主角弹跳的高度,和控制主角行动开关 \r\n      player:{\r\n          default: null,\r\n          type: cc.Node\r\n      },\r\n      //score Label的引用  \r\n      scoreDisplay:{\r\n              default: null,\r\n              type: cc.Label\r\n        },\r\n        // 得分音效资源\r\n      scoreAudio:{\r\n            default: null,\r\n            url: cc.AudioClip\r\n        }\r\n    },\r\n    \r\n    gainScore:function(){\r\n        this.score += 1;\r\n        // 更新scoreDisplay Label的文字\r\n        this.scoreDisplay.string = 'Score:'+this.score.toString();\r\n        // 播放得分音效\r\n        cc.audioEngine.playEffect(this.scoreAudio,false);\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n       // 获取地平面的y轴坐标\r\n       this.groundY = this.ground.y + this.ground.height/2;\r\n       // 初始化计时器\r\n         this.timer = 0;\r\n         this.starDuration = 0;\r\n       // 生成一个新的星星\r\n       this.spawnNewStar();\r\n       //初始化计分\r\n       this.score = 0;\r\n    },\r\n    \r\n    spawnNewStar: function(){\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // 将新增的节点添加到Canvas节点下面\r\n         this.node.addChild(newStar);\r\n         // 为星星设置一个随机位置 \r\n         newStar.setPosition(this.getNewStarPosition());\r\n         // 将 Game 组件的实例传入星星组件\r\n         newStar.getComponent('Star').game = this;\r\n         // 重置计时器， 根据消失时间范围随机取一个值\r\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n    \r\n    gameOver: function(){\r\n        this.player.stopAllActions();// 停止 player 节点的跳跃动作\r\n        cc.director.loadScene('game');\r\n    },\r\n    \r\n    getNewStarPosition: function(){\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度， 随机得到一个星星的y坐标\r\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\r\n        // 根据屏幕宽度， 随机得到一个星星 x 坐标\r\n        var maxX = this.node.width/2;\r\n        randX = cc.randomMinus1To1() * maxX;\r\n        //  返回星星坐标\r\n        return cc.p(randX,randY);\r\n    },\r\n    // called every frame, uncomment this function to activate update callback\r\n     update: function(dt){\r\n          //每帧更新计时器，超过限度还没有生成新的星星\r\n          // 就会调用游戏失败逻辑\r\n          if(this.timer > this.starDuration){\r\n              this.gameOver();\r\n              return;\r\n          }\r\n          this.timer += dt;\r\n     },\r\n});\r\n"]}